/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AlbumWhereUniqueInput } from "../../album/base/AlbumWhereUniqueInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { LyricsUpdateManyWithoutSongsInput } from "./LyricsUpdateManyWithoutSongsInput";
import { StreamUpdateManyWithoutSongsInput } from "./StreamUpdateManyWithoutSongsInput";

@InputType()
class SongUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AlbumWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AlbumWhereUniqueInput)
  @IsOptional()
  @Field(() => AlbumWhereUniqueInput, {
    nullable: true,
  })
  album?: AlbumWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  artist?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  duration?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  file?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  genre?: string | null;

  @ApiProperty({
    required: false,
    type: () => LyricsUpdateManyWithoutSongsInput,
  })
  @ValidateNested()
  @Type(() => LyricsUpdateManyWithoutSongsInput)
  @IsOptional()
  @Field(() => LyricsUpdateManyWithoutSongsInput, {
    nullable: true,
  })
  lyricsItems?: LyricsUpdateManyWithoutSongsInput;

  @ApiProperty({
    required: false,
    type: () => StreamUpdateManyWithoutSongsInput,
  })
  @ValidateNested()
  @Type(() => StreamUpdateManyWithoutSongsInput)
  @IsOptional()
  @Field(() => StreamUpdateManyWithoutSongsInput, {
    nullable: true,
  })
  streams?: StreamUpdateManyWithoutSongsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;
}

export { SongUpdateInput as SongUpdateInput };
