datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Song {
  album       Album?   @relation(fields: [albumId], references: [id])
  albumId     String?
  artist      String?
  createdAt   DateTime @default(now())
  duration    Int?
  file        Json?
  genre       String?
  id          String   @id @default(cuid())
  lyricsItems Lyrics[]
  streams     Stream[]
  title       String?
  updatedAt   DateTime @updatedAt
}

model Album {
  artist      String?
  coverImage  Json?
  createdAt   DateTime  @default(now())
  genre       String?
  id          String    @id @default(cuid())
  releaseDate DateTime?
  songs       Song[]
  title       String?
  updatedAt   DateTime  @updatedAt
}

model Lyrics {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  song      Song?    @relation(fields: [songId], references: [id])
  songId    String?
  updatedAt DateTime @updatedAt
}

model Stream {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  song      Song?     @relation(fields: [songId], references: [id])
  songId    String?
  timestamp DateTime?
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model Library {
  createdAt       DateTime @default(now())
  downloadedSongs Json?
  id              String   @id @default(cuid())
  likedSongs      Json?
  songs           Json?
  updatedAt       DateTime @updatedAt
  user            User?    @relation(fields: [userId], references: [id])
  userId          String?
}

model User {
  createdAt      DateTime  @default(now())
  email          String?   @unique
  firstName      String?
  id             String    @id @default(cuid())
  lastName       String?
  libraries      Library[]
  password       String
  profilePicture Json?
  roles          Json
  streams        Stream[]
  updatedAt      DateTime  @updatedAt
  username       String    @unique
}
